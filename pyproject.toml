[tool.codespell]
skip = ".git,*.pdf,*.svg"
# case-sensitive skip examples
ignore-regex = "\bNd\b"
ignore-words-list = "MapPin"

# The coverage settings in this file only control `coverage report`. `coverage run` and
# `coverage combine` are controlled by the pyproject.toml files in each package's
# subdirectory.
#
# In each subdirectory's pyproject.toml, we use both of the following settings:
#   * `source_pkgs`: detects the given packages no matter where they're imported from.
#   * `source`: detects all files in the given directory, including files that are
#      never imported by the tests.
#
# When running through `tox`, this will produce duplicate entries which must be merged
# with `coverage combine`.

[tool.coverage.run]
plugins = ["coverage_conditional_plugin"]
relative_files = true

[tool.coverage.report]
show_missing = true
skip_covered = true
skip_empty = true
precision = 1
exclude_lines = [
    "pragma: no cover",
    "@(abc\\.)?abstractmethod",
    "NotImplementedError\\(\\)",
    "if TYPE_CHECKING:",
    "class .+?\\(Protocol.*\\):",
    "@overload",
]

[tool.coverage.coverage_conditional_plugin.rules]
# Additional testbed rules are configured in the testbed module
no-cover-if-missing-setuptools_scm = "not is_installed('setuptools_scm')"
no-cover-if-missing-PIL = "not is_installed('PIL')"
no-cover-if-PIL-installed = "is_installed('PIL')"
no-cover-if-lt-py312 = "sys_version_info < (3, 12) and os_environ.get('COVERAGE_EXCLUDE_PYTHON_VERSION') != 'disable'"
no-cover-if-gte-py312 = "sys_version_info > (3, 12) and os_environ.get('COVERAGE_EXCLUDE_PYTHON_VERSION') != 'disable'"
no-cover-if-lt-py311 = "sys_version_info < (3, 11) and os_environ.get('COVERAGE_EXCLUDE_PYTHON_VERSION') != 'disable'"
no-cover-if-gte-py311 = "sys_version_info > (3, 11) and os_environ.get('COVERAGE_EXCLUDE_PYTHON_VERSION') != 'disable'"

[tool.ruff]
exclude = [
    ".template",  # Ruff fails to run at all if allowed to lint the cookiecutter syntax
    "core/src/toga/__init__.pyi",
]

[tool.ruff.lint]
extend-select = [
    "E",      # pycodestyle
    "W",      # pycodestyle
    "F",      # pyflakes
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "YTT",    # flake8-2020
    "ASYNC",  # flake8-async
    "C4",     # flake8-comprehensions
    "I",      # isort
    # "SIM",  # flake8-simplify (very opinionated)
]

[tool.ruff.lint.isort]
combine-as-imports = true
known-third-party = [
    "android",   # isort defaults to making this first-party because it can't be imported.
    "textual",   # We don't ever import textual, so Ruff doesn't know about it.
    "travertino",# In this repo, but still a separate package
]
known-first-party = [
    "testbed",
    "toga",
    "toga_android",
    "toga_cocoa",
    "toga_dummy",
    "toga_gtk",
    "toga_iOS",
    "toga_textual",
    "toga_web",
    "toga_winforms",
]

[tool.towncrier]
directory = "changes"
package = "toga"
package_dir = "core/src"
filename = "docs/about/releases.rst"
title_format = "{version} ({project_date})"
issue_format = "`#{issue} <https://github.com/beeware/toga/issues/{issue}>`__"
template = "changes/template.rst"
type = [
    { directory = "feature", name = "Features", showcontent = true },
    { directory = "bugfix", name = "Bugfixes", showcontent = true },
    { directory = "removal", name = "Backward Incompatible Changes", showcontent = true },
    { directory = "doc", name = "Documentation", showcontent = true },
    { directory = "misc", name = "Misc", showcontent = false },
]

[tool.setuptools_scm]
# We do NOT build/publish a Python package from the repo root (no [project]/[build-system]).
# This section is here to silence a tox warning when run from the root.
# pyproject.toml doesn't contain a setuptools_scm section otherwise.

# -------------------------------------------------------------------
# PEP 735 dependency groups (root): used by tox & contributors.
# These do NOT ship in built wheels.
# -------------------------------------------------------------------
[dependency-groups]

"pre-commit" = [
    "pre-commit == 4.3.0",
]

"town-crier" = [
    "towncrier == 25.8.0",
]

dev = [
    "coverage[toml] == 7.10.6",
    "coverage-conditional-plugin == 0.9.0",
    "Pillow == 11.3.0",
    "pytest == 8.4.1",
    "pytest-asyncio == 1.1.0",
    "pytest-freezer == 0.4.9",
    "pytest-xdist == 3.8.0",
    "setuptools-scm == 9.2.0",
]

docs = [
    "sphinx == 8.2.3",
    "furo == 2025.7.19",
    "sphinx_tabs == 3.4.5",
    "sphinx-autobuild == 2024.10.3",
    "sphinx-csv-filter == 0.4.2",
    "sphinx-copybutton == 0.5.2",
    "sphinx-toolbox == 4.0.0",
    "sphinxcontrib-spelling == 8.0.1",
    "pyenchant == 3.2.2",
    "Pillow == 11.3.0",
]
