# The leading comma generates the "py-..." environments.
[testenv:py{,37,38,39,310,311,312}-{android,cocoa,core,gtk,iOS,web,winforms}]
skip_install = True
deps =
    pytest
    pytest-tldr
    # See https://github.com/nedbat/coveragepy/issues/991
    coverage[toml]~=6.6.0b1
setenv =
    android: subdir = android
    cocoa: subdir = cocoa
    core: subdir = core
    gtk: subdir = gtk
    iOS: subdir = iOS
    web: subdir = web
    winforms: subdir = winforms

    core: TOGA_BACKEND = toga_dummy
    !core: TOGA_BACKEND = toga_{env:subdir}
    gtk: test_command_prefix = xvfb-run -a -s "-screen 0 2048x1536x24"
changedir = {env:subdir}
allowlist_externals =
    bash
    gtk: xvfb-run
commands =
    # TOGA_INSTALL_COMMAND is set to a bash command by the CI workflow.
    {env:TOGA_INSTALL_COMMAND:pip install . ../core ../dummy}
    {env:test_command_prefix:} coverage run -m pytest -vv
    coverage combine
    coverage report --rcfile ../pyproject.toml

[testenv:towncrier-check]
skip_install = True
deps =
    {[testenv:towncrier]deps}
commands =
    python -m towncrier.check --compare-with origin/main

[testenv:towncrier]
skip_install = True
deps =
    towncrier ~= 22.8
commands =
    towncrier {posargs}

[testenv:docs]
skip_install = True
deps =
    -r{toxinidir}/docs/requirements.txt
    ./core
commands =
    python -m sphinx -W docs build/sphinx

[testenv:package]
skip_install = True
deps =
    check_manifest
    build
    twine
commands =
    check-manifest -v {posargs}
    python -m build {posargs}
    python -m twine check {posargs}/dist/*
