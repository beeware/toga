[tox]
envlist = towncrier-check,docs-lint,pre-commit,py3{10-14}-cov{,-trav},coverage{,-trav}-platform
labels =
    test = py-cov{,-trav},coverage{,-trav}
    test-core = py-cov,coverage
    test-trav = py-cov-trav,coverage-trav
    test310 = py310-cov{,-trav},coverage310{,-trav}
    test311 = py311-cov{,-trav},coverage311{,-trav}
    test312 = py312-cov{,-trav},coverage312{,-trav}
    test313 = py313-cov{,-trav},coverage313{,-trav}
    test314 = py314-cov{,-trav},coverage314{,-trav}
    test-fast = py3{10-14}-fast
    test-platform = py3{10-14}-cov{,-trav},coverage{,-trav}-platform
skip_missing_interpreters = True

[testenv:pre-commit]
skip_install = True
deps = {tox_root}{/}travertino
dependency_groups = pre-commit
commands = pre-commit run --all-files --show-diff-on-failure --color=always

# The leading comma generates the "py" environment
[testenv:py{,310,311,312,313,314}{,-fast,-cov}{,-trav}]
depends = pre-commit
changedir =
    !trav: core
    trav: travertino
skip_install = True
setenv =
    TOGA_BACKEND = toga_dummy
allowlist_externals =
    bash
commands =
    # TOGA_INSTALL_COMMAND is set to a bash command by the CI workflow
    {env:TOGA_INSTALL_COMMAND:python -m pip install {tox_root}{/}core[dev] {tox_root}{/}dummy {tox_root}{/}travertino}
    !fast-!cov : python -m pytest {posargs:-vv --color yes}
    cov  : python -m coverage run -m pytest {posargs:-vv --color yes}
    fast : python -m pytest {posargs:-vv --color yes -n auto}

[testenv:coverage{,310,311,312,313,314}{,-trav}{,-html}{,-keep}{,-platform}]
depends =
    !trav: pre-commit,py3{10-14}{,-cov}
    trav: pre-commit,py3{10-14}{,-trav}{,-cov}
changedir =
    !trav: core
    trav: travertino
skip_install = True
# by default, coverage should run on oldest supported Python for testing platform coverage.
# however, coverage for a particular Python version should match the version used for pytest.
base_python =
    coverage310: py310
    coverage311: py311
    coverage312: py312
    coverage313: py313
    coverage314: py314
setenv =
    keep: COMBINE_KEEP = --keep
    !trav: PACKAGE_RCFILE = --rcfile {tox_root}{/}core{/}pyproject.toml
    trav: PACKAGE_RCFILE = --rcfile {tox_root}{/}travertino{/}pyproject.toml
    PROJECT_RCFILE = --rcfile {tox_root}{/}pyproject.toml
    # disable conditional coverage exclusions for Python version
    {platform}: COVERAGE_EXCLUDE_PYTHON_VERSION=disable
commands_pre = python --version
commands =
    # TOGA_INSTALL_COMMAND is set to a bash command by the CI workflow
    {env:TOGA_INSTALL_COMMAND:python -m pip install {tox_root}{/}core[dev] {tox_root}{/}travertino}
    -python -m coverage combine {env:PACKAGE_RCFILE} {env:COMBINE_KEEP}
    html: python -m coverage html {env:PROJECT_RCFILE} --skip-covered --skip-empty
    python -m coverage report {env:PROJECT_RCFILE} --fail-under=100

[testenv:towncrier{,-check}]
skip_install = True
dependency_groups = town-crier
commands =
    check  : python -m towncrier.check --compare-with origin/main
    !check : python -m towncrier {posargs}

[docs]
docs_dir = {tox_root}{/}docs{/}en

[testenv:docs{,-lint,-all,-live,-en}]
# Docs are always built on Python 3.13. See also the RTD config and contribution docs.
base_python = py313
skip_install = True
dependency_groups = docs
commands =
    !lint-!all-!live-!en : build_md_translations {posargs} en --source-code=core{/}src
    lint : markdown-checker --dir {[docs]docs_dir} --func check_broken_urls
    # lint : pyspelling  # Disabled for the purposes of the draft PR; TODO: re-enable and fix for final.
    # --build-with-errors included for the purposes of this PR; TODO: remove for final.
    live : live_serve_en {posargs} core{/}src --source-code=core{/}src --build-with-errors
    all : build_md_translations {posargs} en --source-code=core{/}src
    en : build_md_translations {posargs} en --source-code=core{/}src --build-with-errors
